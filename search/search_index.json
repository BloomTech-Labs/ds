{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Labs DS Phases Meet with your Labs DS manager to approve your work from each phase: Planning First 1-2 sprints Contribute to Product Vision Document Identify user problems that DS can help solve Assess your data Choose DS problem(s) to work on Cycle 1: Data + Baseline Next 2-3 sprints Get data, wrangle it Define how you'll measure success Begin with baselines Deploy baseline API Cycle 2: Model + Deploy Through sprint 7 Develop models iteratively Plot your progress Deploy model API Cycle 3: Iterate If time allows Add another user feature Or, iterate on your current feature(s) Documentation + Presentation Last sprint API documentation Architecture diagram Notebooks PEP8 Video/slides","title":"Labs DS Phases"},{"location":"#labs-ds-phases","text":"Meet with your Labs DS manager to approve your work from each phase:","title":"Labs DS Phases"},{"location":"#planning","text":"First 1-2 sprints Contribute to Product Vision Document Identify user problems that DS can help solve Assess your data Choose DS problem(s) to work on","title":"Planning"},{"location":"#cycle-1-data-baseline","text":"Next 2-3 sprints Get data, wrangle it Define how you'll measure success Begin with baselines Deploy baseline API","title":"Cycle 1: Data + Baseline"},{"location":"#cycle-2-model-deploy","text":"Through sprint 7 Develop models iteratively Plot your progress Deploy model API","title":"Cycle 2: Model + Deploy"},{"location":"#cycle-3-iterate","text":"If time allows Add another user feature Or, iterate on your current feature(s)","title":"Cycle 3: Iterate"},{"location":"#documentation-presentation","text":"Last sprint API documentation Architecture diagram Notebooks PEP8 Video/slides","title":"Documentation + Presentation"},{"location":"baseline/","text":"Cycle 1: Data + Baseline Get data, wrangle it Terms of service, webpages, APIs Google, People + AI Guidebook, Data Collection + Evaluation https://pair.withgoogle.com/chapter/data-collection/ Define how you'll measure success Google, People + AI Guidebook, User Needs + Defining Success, Design & evaluate the reward function https://pair.withgoogle.com/chapter/user-needs/#section3 Begin with baselines EFF ... Recommended: Deploy baseline API How do Lambda students get AWS access?","title":"Cycle 1: Data + Baseline"},{"location":"baseline/#cycle-1-data-baseline","text":"","title":"Cycle 1: Data + Baseline"},{"location":"baseline/#get-data-wrangle-it","text":"Terms of service, webpages, APIs Google, People + AI Guidebook, Data Collection + Evaluation https://pair.withgoogle.com/chapter/data-collection/","title":"Get data, wrangle it"},{"location":"baseline/#define-how-youll-measure-success","text":"Google, People + AI Guidebook, User Needs + Defining Success, Design & evaluate the reward function https://pair.withgoogle.com/chapter/user-needs/#section3","title":"Define how you'll measure success"},{"location":"baseline/#begin-with-baselines","text":"EFF ...","title":"Begin with baselines"},{"location":"baseline/#recommended-deploy-baseline-api","text":"How do Lambda students get AWS access?","title":"Recommended: Deploy baseline API"},{"location":"bigdata/","text":"Big Data What if your data doesn\u2019t fit in memory? My advice: Try to \u201cscale up\u201d (use a server with more memory) before you try to \u201cscale out\u201d (use distributed computing frameworks). If you\u2019re looking at frameworks, try something lightweight like Dask before something heavy-duty like Spark. If you\u2019re fitting models, figure out whether more data is actually useful: Read \"More data or better models?\" by Xavier Amatriain, based on his experience leading ML Engineering at Netflix. Read about Learning curves in Scikit-Learn in Python Data Science Handbook by Jake VanderPlas. Then, decide whether to use a smaller sample that does fit in memory, or, try \u201cincremental learning\u201d in scikit-learn or Dask .","title":"Big Data"},{"location":"bigdata/#big-data","text":"What if your data doesn\u2019t fit in memory? My advice: Try to \u201cscale up\u201d (use a server with more memory) before you try to \u201cscale out\u201d (use distributed computing frameworks). If you\u2019re looking at frameworks, try something lightweight like Dask before something heavy-duty like Spark. If you\u2019re fitting models, figure out whether more data is actually useful: Read \"More data or better models?\" by Xavier Amatriain, based on his experience leading ML Engineering at Netflix. Read about Learning curves in Scikit-Learn in Python Data Science Handbook by Jake VanderPlas. Then, decide whether to use a smaller sample that does fit in memory, or, try \u201cincremental learning\u201d in scikit-learn or Dask .","title":"Big Data"},{"location":"cycle1/","text":"Cycle 1: Data + Baseline Get data, wrangle it Resources Google People + AI Guidebook: Data Collection + Evaluation Data analysis checklist Define how you'll measure success Resources Google, People + AI Guidebook: User Needs + Defining Success: Design & evaluate the reward function Begin with baselines In Cycle 1, you're required to start making a chart like this. Label the axes, with time on the x-axis, and your evaluation metric on the y-axis. Then plot the red horizontal lines, representing baselines and user expectations. This will prepare you for Cycle 2, when you will track your team's progress like how the EFF tracks AI research progress , with a datapoint for each of your iterations. Deploy baseline API * Recommended in cycle 1 for Labs 23, required for Labs 24 Resources Always start with a stupid model, no exceptions FastAPI videos , #1\u20145.","title":"Cycle 1: Data + Baseline"},{"location":"cycle1/#cycle-1-data-baseline","text":"","title":"Cycle 1: Data + Baseline"},{"location":"cycle1/#get-data-wrangle-it","text":"Resources Google People + AI Guidebook: Data Collection + Evaluation Data analysis checklist","title":"Get data, wrangle it"},{"location":"cycle1/#define-how-youll-measure-success","text":"Resources Google, People + AI Guidebook: User Needs + Defining Success: Design & evaluate the reward function","title":"Define how you'll measure success"},{"location":"cycle1/#begin-with-baselines","text":"In Cycle 1, you're required to start making a chart like this. Label the axes, with time on the x-axis, and your evaluation metric on the y-axis. Then plot the red horizontal lines, representing baselines and user expectations. This will prepare you for Cycle 2, when you will track your team's progress like how the EFF tracks AI research progress , with a datapoint for each of your iterations.","title":"Begin with baselines"},{"location":"cycle1/#deploy-baseline-api","text":"* Recommended in cycle 1 for Labs 23, required for Labs 24 Resources Always start with a stupid model, no exceptions FastAPI videos , #1\u20145.","title":"Deploy baseline API"},{"location":"cycle2/","text":"Cycle 2: Model + Deploy Develop models iteratively, plot your progress In Cycle 2, your team must plot your progress, like how the EFF tracks AI research progress \u2014 with time on the x-axis, an evaluation metric on the y-axis, and a datapoint for each attempt, compared to some baseline: We care less about the end result (how high the metric goes at the end of the project) and more about the effort rate (how many attempts are made to iterate early). Your line's slope measures your learning rate. Deploy model API FastAPI FastAPI is an alternative to Flask. It gives you \"automatic interactive API documentation.\" repo docs screencasts Porting Flask to FastAPI for ML Model Serving Resources by Lambda students Elizabeth Ter Sahakyan, Create An API To Deploy Machine Learning Models Using Flask and Heroku Marvin Davila, Deploying a Flask App to AWS Elastic Beanstalk Marvin Davila, How to Create an AWS Lambda Function in Cloud9 Marvin Davila, How to Rate Limit Routes in Flask Quinn Dougherty, Build Week Survival Guide: Data Engineering Udemy course Soledad Galli, Deployment of Machine Learning Models (8 hours of videos, $12)","title":"Cycle 2: Model + Deploy"},{"location":"cycle2/#cycle-2-model-deploy","text":"","title":"Cycle 2: Model + Deploy"},{"location":"cycle2/#develop-models-iteratively-plot-your-progress","text":"In Cycle 2, your team must plot your progress, like how the EFF tracks AI research progress \u2014 with time on the x-axis, an evaluation metric on the y-axis, and a datapoint for each attempt, compared to some baseline: We care less about the end result (how high the metric goes at the end of the project) and more about the effort rate (how many attempts are made to iterate early). Your line's slope measures your learning rate.","title":"Develop models iteratively, plot your progress"},{"location":"cycle2/#deploy-model-api","text":"","title":"Deploy model API"},{"location":"cycle2/#fastapi","text":"FastAPI is an alternative to Flask. It gives you \"automatic interactive API documentation.\" repo docs screencasts Porting Flask to FastAPI for ML Model Serving","title":"FastAPI"},{"location":"cycle2/#resources-by-lambda-students","text":"Elizabeth Ter Sahakyan, Create An API To Deploy Machine Learning Models Using Flask and Heroku Marvin Davila, Deploying a Flask App to AWS Elastic Beanstalk Marvin Davila, How to Create an AWS Lambda Function in Cloud9 Marvin Davila, How to Rate Limit Routes in Flask Quinn Dougherty, Build Week Survival Guide: Data Engineering","title":"Resources by Lambda students"},{"location":"cycle2/#udemy-course","text":"Soledad Galli, Deployment of Machine Learning Models (8 hours of videos, $12)","title":"Udemy course"},{"location":"cycle3/","text":"Cycle 3: Iterate You don't have to complete cycle 3, but you do have to plan for it. To complete Labs, you must complete 2 product cycles. But, you must plan 3 release canvases. The release canvas is your planning document for a product cycle. Add another user feature You can go back to the beginning with a new user feature. Choose a new DS problem to work on and work on cycle 1 tasks. Or, iterate on your current feature(s) You can continue with your current user feature(s). Iterate on cycle 2 tasks to improve your product. Don't forget about documentation + presentation too!","title":"Cycle 3: Iterate"},{"location":"cycle3/#cycle-3-iterate","text":"You don't have to complete cycle 3, but you do have to plan for it. To complete Labs, you must complete 2 product cycles. But, you must plan 3 release canvases. The release canvas is your planning document for a product cycle.","title":"Cycle 3: Iterate"},{"location":"cycle3/#add-another-user-feature","text":"You can go back to the beginning with a new user feature. Choose a new DS problem to work on and work on cycle 1 tasks.","title":"Add another user feature"},{"location":"cycle3/#or-iterate-on-your-current-features","text":"You can continue with your current user feature(s). Iterate on cycle 2 tasks to improve your product. Don't forget about documentation + presentation too!","title":"Or, iterate on your current feature(s)"},{"location":"deployment/","text":"Deployment Architecture You will design and document your architecture to deploy your model and integrate it into your product. For example: Labs 17 Cryptolytic architecture (diagram made with Lucidchart ) Labs 19 Tally AI architecture (diagram made with Figma ) FastAPI FastAPI is an alternative to Flask. It gives you \"automatic interactive API documentation.\" repo docs screencasts Porting Flask to FastAPI for ML Model Serving Resources Lambda students Elizabeth Ter Sahakyan, Create An API To Deploy Machine Learning Models Using Flask and Heroku Marvin Davila, Deploying a Flask App to AWS Elastic Beanstalk Marvin Davila, How to Create an AWS Lambda Function in Cloud9 Marvin Davila, How to Rate Limit Routes in Flask Quinn Dougherty, Build Week Survival Guide: Data Engineering Third party Soledad Galli, Deployment of Machine Learning Models (Udemy course, 8 hours of videos, $12)","title":"Deployment"},{"location":"deployment/#deployment","text":"","title":"Deployment"},{"location":"deployment/#architecture","text":"You will design and document your architecture to deploy your model and integrate it into your product. For example: Labs 17 Cryptolytic architecture (diagram made with Lucidchart ) Labs 19 Tally AI architecture (diagram made with Figma )","title":"Architecture"},{"location":"deployment/#fastapi","text":"FastAPI is an alternative to Flask. It gives you \"automatic interactive API documentation.\" repo docs screencasts Porting Flask to FastAPI for ML Model Serving","title":"FastAPI"},{"location":"deployment/#resources","text":"","title":"Resources"},{"location":"deployment/#lambda-students","text":"Elizabeth Ter Sahakyan, Create An API To Deploy Machine Learning Models Using Flask and Heroku Marvin Davila, Deploying a Flask App to AWS Elastic Beanstalk Marvin Davila, How to Create an AWS Lambda Function in Cloud9 Marvin Davila, How to Rate Limit Routes in Flask Quinn Dougherty, Build Week Survival Guide: Data Engineering","title":"Lambda students"},{"location":"deployment/#third-party","text":"Soledad Galli, Deployment of Machine Learning Models (Udemy course, 8 hours of videos, $12)","title":"Third party"},{"location":"documentation/","text":"Documentation + Presentation API documentation FastAPI is recommended because it gives you \"automatic interactive API documentation\"! Architecture diagram You will design and document your architecture to deploy your model and integrate it into your product. For example: Labs 17 Cryptolytic architecture (diagram made with Lucidchart ) Labs 19 Tally AI architecture (diagram made with Figma ) Notebooks Jupyter Notebook Best Practices for Data Science PEP8 How to Write Beautiful Python Code With PEP 8 The Elements of Python Style Video/slides Labs 20\u2019s top 2 products were DS cross-functional. See for yourself! Trash Panda: app , repo , video Sound Drip: app , repo , video Labs 12 was the first cohort with DS! Larkist video Follow this advice: How to give a perfect demo","title":"Documentation + Presentation"},{"location":"documentation/#documentation-presentation","text":"","title":"Documentation + Presentation"},{"location":"documentation/#api-documentation","text":"FastAPI is recommended because it gives you \"automatic interactive API documentation\"!","title":"API documentation"},{"location":"documentation/#architecture-diagram","text":"You will design and document your architecture to deploy your model and integrate it into your product. For example: Labs 17 Cryptolytic architecture (diagram made with Lucidchart ) Labs 19 Tally AI architecture (diagram made with Figma )","title":"Architecture diagram"},{"location":"documentation/#notebooks","text":"Jupyter Notebook Best Practices for Data Science","title":"Notebooks"},{"location":"documentation/#pep8","text":"How to Write Beautiful Python Code With PEP 8 The Elements of Python Style","title":"PEP8"},{"location":"documentation/#videoslides","text":"Labs 20\u2019s top 2 products were DS cross-functional. See for yourself! Trash Panda: app , repo , video Sound Drip: app , repo , video Labs 12 was the first cohort with DS! Larkist video Follow this advice: How to give a perfect demo","title":"Video/slides"},{"location":"examples/","text":"Examples Labs 20 Labs 20\u2019s top 2 products were DS cross-functional. See for yourself! Trash Panda: app , repo , video Sound Drip: app , repo , video Labs 12 Labs 12 was the first cohort with DS! Larkist video","title":"Examples"},{"location":"examples/#examples","text":"","title":"Examples"},{"location":"examples/#labs-20","text":"Labs 20\u2019s top 2 products were DS cross-functional. See for yourself! Trash Panda: app , repo , video Sound Drip: app , repo , video","title":"Labs 20"},{"location":"examples/#labs-12","text":"Labs 12 was the first cohort with DS! Larkist video","title":"Labs 12"},{"location":"expectations/","text":"Expectations Contribute daily Success starts with showing up. Are you showing up to participate with your team, on Slack, Zoom, and GitHub? Do you have something to show for your work, some tangible artifact, each day? This doesn't have to be just production code. For example, documentation is valuable, such as a data dictionary, with definitions, assumptions, and metadata. Jupyter notebooks with exploratory analysis are helpful to learn about the data and refine project plans. Regardless of the work format, it should be committed to GitHub or Notion. To help teams review and troubleshoot their work, we need to be able to see it in central repositories. Machine Learning will be less than 50% of your time (but should be more than 0%) See Monica Rogati's diagram from her blog post, The AI Hierarchy of Needs :","title":"Expectations"},{"location":"expectations/#expectations","text":"","title":"Expectations"},{"location":"expectations/#contribute-daily","text":"Success starts with showing up. Are you showing up to participate with your team, on Slack, Zoom, and GitHub? Do you have something to show for your work, some tangible artifact, each day? This doesn't have to be just production code. For example, documentation is valuable, such as a data dictionary, with definitions, assumptions, and metadata. Jupyter notebooks with exploratory analysis are helpful to learn about the data and refine project plans. Regardless of the work format, it should be committed to GitHub or Notion. To help teams review and troubleshoot their work, we need to be able to see it in central repositories.","title":"Contribute daily"},{"location":"expectations/#machine-learning-will-be-less-than-50-of-your-time-but-should-be-more-than-0","text":"See Monica Rogati's diagram from her blog post, The AI Hierarchy of Needs :","title":"Machine Learning will be less than 50% of your time (but should be more than 0%)"},{"location":"planning/","text":"Planning Contribute to Product Vision Document PVDs are at the product level \u2014 all tracks contribute to the product, so all students are required to work together on the PVD. While working on PVDs, students are exposed to the product management process and concepts like customer discovery and going from vision to planning. You will be a part of this process in your future workplaces and we find it very valuable for all students to be involved. Plans can be flexible and iterative. We don't expect DS students to stick to your original plan \u2014 but we do expect you to make one. President Eisenhower is famously quoted: \"In preparing for battle I have always found that plans are useless, but planning is indispensable.\" This is true of DS too! For the Technical Research and Architecture sections of the PVD, explore some options and make some initial hypotheses. But you'll be doing technical research and making architecture decisions all throughout your time in Labs. So you do not need to finalize these during the Planning phase. Identify user problems that DS can help solve Look for user problems that could be solved with any of these patterns: Automate tasks when you can't give step-by-step instructions, but you can give many labeled examples Predict or estimate uncertain information Give users personalized recommendations Refer to these additional resources: Google People + AI Guidebook: User Needs + Defining Success: Find the intersection of user needs & AI strengths . See bulleted lists: \"When AI is probably better\" versus \"When AI is probably not better.\" Building Machine Learning Powered Applications , PDF pages 23-32. Five Questions Data Science Answers Assess your data During the Planning phase, you are required to assess your data. What data do you have now? What data do you need, to solve the problem? What data can you get? You could make a table that looks something like this: Size Features Labels What data do you have? What do you need? What can you get? Then fill in the table to answer the questions and complete your data assessment. Refer to these resources: Google People + AI Guidebook: Data Collection + Evaluation Building Machine Learning Powered Applications , PDF pages 33-35. You may have heard that we don't write code in Labs during the Planning phase. This is generally true. However, DS is permitted and expected to write some code to do your data assessment and identify DS opportunities. This will be exploratory code, probably in notebooks. You probably won't use any of this code in production for the solution you deliver. Choose DS problem(s) to work on You will choose at least one user feature to help build with Data Science. DS teams will probably deliver fewer features than Web teams during Labs. For example, Web may release three features in cycle 1, then three more features in cycle 2. But DS may work on a single user feature across both cycles. This is accepted and expected! You will list your user feature(s) in the Product Vision Document for your project, and in the Release Canvas documents for each cycle. The Release Canvas template also asks for a Lo-fi prototype (mockup) for each feature. DS students should help make mockups. Refer to these resources: Building Machine Learning Powered Applications , PDF pages 21-22. Stakeholder-Driven Data Science @ 6:40 (\"First example, retail site selection ... We start with mockups.\")","title":"Planning"},{"location":"planning/#planning","text":"","title":"Planning"},{"location":"planning/#contribute-to-product-vision-document","text":"PVDs are at the product level \u2014 all tracks contribute to the product, so all students are required to work together on the PVD. While working on PVDs, students are exposed to the product management process and concepts like customer discovery and going from vision to planning. You will be a part of this process in your future workplaces and we find it very valuable for all students to be involved. Plans can be flexible and iterative. We don't expect DS students to stick to your original plan \u2014 but we do expect you to make one. President Eisenhower is famously quoted: \"In preparing for battle I have always found that plans are useless, but planning is indispensable.\" This is true of DS too! For the Technical Research and Architecture sections of the PVD, explore some options and make some initial hypotheses. But you'll be doing technical research and making architecture decisions all throughout your time in Labs. So you do not need to finalize these during the Planning phase.","title":"Contribute to Product Vision Document"},{"location":"planning/#identify-user-problems-that-ds-can-help-solve","text":"Look for user problems that could be solved with any of these patterns: Automate tasks when you can't give step-by-step instructions, but you can give many labeled examples Predict or estimate uncertain information Give users personalized recommendations Refer to these additional resources: Google People + AI Guidebook: User Needs + Defining Success: Find the intersection of user needs & AI strengths . See bulleted lists: \"When AI is probably better\" versus \"When AI is probably not better.\" Building Machine Learning Powered Applications , PDF pages 23-32. Five Questions Data Science Answers","title":"Identify user problems that DS can help solve"},{"location":"planning/#assess-your-data","text":"During the Planning phase, you are required to assess your data. What data do you have now? What data do you need, to solve the problem? What data can you get? You could make a table that looks something like this: Size Features Labels What data do you have? What do you need? What can you get? Then fill in the table to answer the questions and complete your data assessment. Refer to these resources: Google People + AI Guidebook: Data Collection + Evaluation Building Machine Learning Powered Applications , PDF pages 33-35. You may have heard that we don't write code in Labs during the Planning phase. This is generally true. However, DS is permitted and expected to write some code to do your data assessment and identify DS opportunities. This will be exploratory code, probably in notebooks. You probably won't use any of this code in production for the solution you deliver.","title":"Assess your data"},{"location":"planning/#choose-ds-problems-to-work-on","text":"You will choose at least one user feature to help build with Data Science. DS teams will probably deliver fewer features than Web teams during Labs. For example, Web may release three features in cycle 1, then three more features in cycle 2. But DS may work on a single user feature across both cycles. This is accepted and expected! You will list your user feature(s) in the Product Vision Document for your project, and in the Release Canvas documents for each cycle. The Release Canvas template also asks for a Lo-fi prototype (mockup) for each feature. DS students should help make mockups. Refer to these resources: Building Machine Learning Powered Applications , PDF pages 21-22. Stakeholder-Driven Data Science @ 6:40 (\"First example, retail site selection ... We start with mockups.\")","title":"Choose DS problem(s) to work on"},{"location":"process/","text":"DS process CRISP-DM CRISP-DM (Cross-industry standard process for data mining) Business Understanding Data Understanding Data Preparation Modeling Evaluation Deployment Building Machine-Learning Powered Applications Emmanuel Ameisen, Building Machine Learning Powered Applications: Going from Idea to Product , PDF pages 15\u201416: The road from an idea to a deployed ML application is long and winding. After seeing many companies and individuals build such projects, I\u2019ve identified four key successive stages ... Identifying the right ML approach ... set the right success criteria ... identify an adequate initial dataset ... Building an initial prototype ... to tackle the product goal with no ML involved ... Iterating on models Deployment and monitoring Max Shron Stakeholder-Driven Data Science CoNVO: Context, Need, Vision, Outcome Renee Teate Francois Chollet Google People + AI Agile Data Science","title":"DS process"},{"location":"process/#ds-process","text":"","title":"DS process"},{"location":"process/#crisp-dm","text":"CRISP-DM (Cross-industry standard process for data mining) Business Understanding Data Understanding Data Preparation Modeling Evaluation Deployment","title":"CRISP-DM"},{"location":"process/#building-machine-learning-powered-applications","text":"Emmanuel Ameisen, Building Machine Learning Powered Applications: Going from Idea to Product , PDF pages 15\u201416: The road from an idea to a deployed ML application is long and winding. After seeing many companies and individuals build such projects, I\u2019ve identified four key successive stages ... Identifying the right ML approach ... set the right success criteria ... identify an adequate initial dataset ... Building an initial prototype ... to tackle the product goal with no ML involved ... Iterating on models Deployment and monitoring","title":"Building Machine-Learning Powered Applications"},{"location":"process/#max-shron","text":"Stakeholder-Driven Data Science CoNVO: Context, Need, Vision, Outcome","title":"Max Shron"},{"location":"process/#renee-teate","text":"","title":"Renee Teate"},{"location":"process/#francois-chollet","text":"","title":"Francois Chollet"},{"location":"process/#google-people-ai","text":"","title":"Google People + AI"},{"location":"process/#agile-data-science","text":"","title":"Agile Data Science"}]}